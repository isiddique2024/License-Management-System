events {
    worker_connections 4096;
}

http {

    large_client_header_buffers 4 16k;

    # Rate Limit Settings
    limit_req_zone $binary_remote_addr zone=backend_limit:10m rate=1r/s;

    # Log Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Technically not needed since we're serving static files
    upstream react_frontend {
        server react_frontend:3000;
    }

    # Go Backend
    upstream go_backend {
        server go_backend:8001;
    }

    # Keycloak Frontend/Backend
    upstream keycloak {
        server keycloak:8080;
    }

    # Redirect all HTTP requests to HTTPS
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 quic reuseport;   
        listen [::]:443 quic reuseport;
        listen 443 ssl;
        listen [::]:443 ssl; 
        keepalive_timeout   70;

        server_name localhost; # Adjust domain name here

        # SSL Certificate/Key
        ssl_certificate /etc/nginx/certs/selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/selfsigned.key;

        # SSL Configuration
        ssl_protocols TLSv1.3;
        ssl_early_data on;

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        ssl_stapling off; # OSCP stapling doesn't work with self signed certs, set this to on in production.
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4;


        # Security Headers
        add_header Alt-Svc 'h3=":443"; ma=864000' always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Permissions-Policy "accelerometer=(), camera=(), fullscreen=*, geolocation=(self), gyroscope=(), microphone=(), payment=*" always;

        # GZip Settings
        gzip on;
        gzip_static on;
        gzip_comp_level 2;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_disable "msie6";
        gzip_min_length 250;
        gzip_proxied no-cache no-store private expired auth;
        gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
        
        # Root directory for serving static files
        root /usr/share/nginx/html;
        index index.html;
        include /etc/nginx/mime.types; # Needed to make CSS files work
        # Main location block for serving static files
        location / {
            try_files $uri $uri/ /index.html =404;
        }

        # # Cache control
        # location ~* \.(js|mjs|html|css)$ {
        #     types {
        #         text/javascript js;
        #         application/javascript mjs;
        #         text/html html;
        #         text/css css;
        #     }
        #     try_files $uri =404;
        # }

        # Go backend API
        location /api/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Early-Data $ssl_early_data;

            proxy_pass http://go_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # Keycloak JS Files
        location /js/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Early-Data $ssl_early_data;

            proxy_pass http://keycloak;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # Keycloak Realms
        location /realms/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Early-Data $ssl_early_data;

            proxy_pass http://keycloak;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # Keycloak Resources
        location /resources/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Early-Data $ssl_early_data;
            
            proxy_pass http://keycloak;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}
